= form_for @channel do |f|
  - if @channel.errors.any?
    #error_explanation
      h4= t 'errors.template.header', model: t('activerecord.models.channel.one'), count: @channel.errors.count
      ul
        - @channel.errors.full_messages.each do |message|
          li = message

  .input-field
    = f.text_field :title
    = f.label :title, class: "#{'active' if @channel.title}"
    
  .switch
    label
      = t('.private')
      - #i.mdi-action-visibility-off
      = f.check_box :public
      span.lever
      = t('.public')

  .input-field
    = f.label :tag_list, t('.tag_list'), class: "#{'active' unless @channel.tag_list.empty?}"
    - # f.text_field :tag_list, @channel.tag_list
    = text_field_tag 'channel[tag_list]', @channel.tag_list.join(', ')

  .input-field
    i.mdi-content-link.prefix.active
    = f.url_field :source_url, autofocus: true, class: 'validate'
    = f.label :source_url, class: 'active'
  
  br
  h4= Channel.human_attribute_name :setup
  br
  = f.fields_for :setup do |s_f|
    .input-field
      = s_f.number_field :max_price
      = s_f.label :max_price, class: 'active'

    .input-field
      = s_f.number_field :shift_days
      = s_f.label :shift_days, class: 'active'

    .input-field
      = s_f.text_area :stop_words, cols: 2, class: 'materialize-textarea', 
        value: s_f.object.stop_words_str
      = s_f.label :stop_words, class: 'active'

    - #.input-field
    - # f.check_box :force_fetch

  .actions.valign-wrapper
    = link_to channels_path, class: "waves-effect waves-teal btn-flat"
      = t('.back')
      i.mdi-navigation-arrow-back.left

    button.btn-large.waves-effect.waves-light(type="submit" name="commit") 
      = t('.submit')
      i.mdi-content-send.right
